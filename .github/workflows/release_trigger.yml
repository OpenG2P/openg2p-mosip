name: Build and docker upon a release

on:
  release:
    types: [published]
jobs:
  auth-mediator:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.release_namespace_docker_hub }}
      SERVICE_NAME: openg2p-mosip-auth-mediator
      SERVICE_LOCATION: openg2p-auth-mediator
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        ref: ${{ github.ref }}
        java-version: 11
        
    - name: Setup branch and env
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV
     
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}
    
    - name: Build Mediator with Maven
      run: |
        cd "./${{env.SERVICE_LOCATION}}"
        mvn -B clean package

    - name: Build image
      run: |
        cd "./${{env.SERVICE_LOCATION}}"
        docker build . --file Dockerfile --tag ${{ env.SERVICE_NAME }}

    - name: Log into registry
      run: echo "${{ secrets.token_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        if [[ $BRANCH_NAME == master ]]; then
          VERSION=latest
        else
          VERSION=$BRANCH_NAME
        fi
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $SERVICE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
